{"ast":null,"code":"import { STA_TOTAL_SUPPLY } from '../../Constants/Constants';\nimport Big from 'big.js';\nconst INITIAL_STATE = {\n  price: {\n    sta: {\n      current: null,\n      previous: null,\n      change: null,\n      changePerc: null\n    },\n    wsta: {\n      current: null,\n      previous: null,\n      change: null,\n      changePerc: null\n    }\n  },\n  exchangeRate: {\n    staToWSta: null,\n    wStaToSta: null\n  },\n  volume: {\n    inCurrency: null,\n    inSta: null\n  },\n  supply: {\n    remainingSta: null,\n    total: null,\n    remainingWSta: null\n  },\n  burn24h: null,\n  wrappedSupply: null,\n  chart: {\n    price: null,\n    volume: null\n  },\n  meta: {\n    success: false,\n    loading: false,\n    error: false,\n    errorMessage: null\n  }\n};\nexport default ((state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case 'STATERA_LOADING':\n      {\n        return Object.assign({}, INITIAL_STATE, {\n          meta: {\n            loading: true\n          }\n        });\n      }\n\n    case 'STATERA_SUCCESS':\n      {\n        const _results = action.payload;\n\n        const priceVolumeStaResult = _results.find(result => result.name === 'price:sta').result;\n\n        const priceWStaResult = _results.find(result => result.name === 'price:wsta').result;\n\n        const supplyStaResult = _results.find(result => result.name === 'supply:sta').result;\n\n        const supplyWStaResult = _results.find(result => result.name === 'supply:wsta').result;\n\n        const chartResult = _results.find(result => result.name === 'chart').result;\n\n        return Object.assign({}, INITIAL_STATE, {\n          price: {\n            sta: {\n              current: priceVolumeStaResult.currentPrice,\n              previous: priceVolumeStaResult.previousPrice,\n              change: priceVolumeStaResult.priceChange,\n              changePerc: priceVolumeStaResult.priceChangePerc\n            },\n            wsta: {\n              current: priceWStaResult.currentPrice,\n              previous: priceWStaResult.previousPrice,\n              change: priceWStaResult.priceChange,\n              changePerc: priceWStaResult.priceChangePerc\n            }\n          },\n          exchangeRate: {\n            staToWSta: priceVolumeStaResult.currentPrice / priceWStaResult.currentPrice,\n            wStaToSta: priceWStaResult.currentPrice / priceVolumeStaResult.currentPrice\n          },\n          volume: {\n            inCurrency: priceVolumeStaResult.volumeInCurrency,\n            inSta: priceVolumeStaResult.volumeInSta\n          },\n          supply: {\n            remainingSta: supplyStaResult,\n            remainingWSta: supplyWStaResult,\n            total: Big(STA_TOTAL_SUPPLY).toNumber()\n          },\n          chart: {\n            price: chartResult.price,\n            volume: chartResult.volume\n          },\n          meta: {\n            success: true\n          }\n        });\n      }\n\n    case 'STATERA_ERROR':\n      {\n        return Object.assign({}, INITIAL_STATE, {\n          meta: {\n            error: true\n          }\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n});","map":{"version":3,"sources":["/Users/nco/Documents/GitHub/dashboard/src/store/reducers/statera.ts"],"names":["STA_TOTAL_SUPPLY","Big","INITIAL_STATE","price","sta","current","previous","change","changePerc","wsta","exchangeRate","staToWSta","wStaToSta","volume","inCurrency","inSta","supply","remainingSta","total","remainingWSta","burn24h","wrappedSupply","chart","meta","success","loading","error","errorMessage","state","action","type","Object","assign","_results","payload","priceVolumeStaResult","find","result","name","priceWStaResult","supplyStaResult","supplyWStaResult","chartResult","currentPrice","previousPrice","priceChange","priceChangePerc","volumeInCurrency","volumeInSta","toNumber"],"mappings":"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","sourcesContent":["import { STA_TOTAL_SUPPLY } from '../../Constants/Constants'\r\nimport Big from 'big.js'\r\nimport { DateTime } from \"luxon\";\r\n\r\nconst INITIAL_STATE = {\r\n  price: {\r\n    sta: {\r\n      current: null,\r\n      previous: null,\r\n      change: null,\r\n      changePerc: null,\r\n    },\r\n    wsta: {\r\n      current: null,\r\n      previous: null,\r\n      change: null,\r\n      changePerc: null,\r\n    },\r\n  },\r\n  exchangeRate: {\r\n    staToWSta: null,\r\n    wStaToSta: null,\r\n  },\r\n  volume: {\r\n    inCurrency: null,\r\n    inSta: null,\r\n  },\r\n  supply: {\r\n    remainingSta: null,\r\n    total: null,\r\n    remainingWSta: null,\r\n  },\r\n  burn24h: null,\r\n  wrappedSupply: null,\r\n  chart: {\r\n    price: null,\r\n    volume: null,\r\n  },\r\n  meta: {\r\n    success: false,\r\n    loading: false,\r\n    error: false,\r\n    errorMessage: null,\r\n  },\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action:any) => {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase 'STATERA_LOADING': {\r\n\t\t\treturn Object.assign({}, INITIAL_STATE, {\r\n        meta: {\r\n          loading: true,\r\n        }\r\n      })\r\n    }\r\n\r\n    case 'STATERA_SUCCESS': {\r\n      const _results = action.payload\r\n      const priceVolumeStaResult = _results.find((result:any) => result.name === 'price:sta').result\r\n      const priceWStaResult = _results.find((result:any) => result.name === 'price:wsta').result\r\n      const supplyStaResult = _results.find((result:any) => result.name === 'supply:sta').result\r\n      const supplyWStaResult = _results.find((result:any) => result.name === 'supply:wsta').result\r\n      const chartResult = _results.find((result:any) => result.name === 'chart').result\r\n\r\n\t\t\treturn Object.assign({}, INITIAL_STATE, {\r\n        price: {\r\n          sta: {\r\n            current: priceVolumeStaResult.currentPrice,\r\n            previous: priceVolumeStaResult.previousPrice,\r\n            change: priceVolumeStaResult.priceChange,\r\n            changePerc: priceVolumeStaResult.priceChangePerc,\r\n          },\r\n          wsta: {\r\n            current: priceWStaResult.currentPrice,\r\n            previous: priceWStaResult.previousPrice,\r\n            change: priceWStaResult.priceChange,\r\n            changePerc: priceWStaResult.priceChangePerc,\r\n          },\r\n        },\r\n        exchangeRate: {\r\n          staToWSta: priceVolumeStaResult.currentPrice / priceWStaResult.currentPrice,\r\n          wStaToSta: priceWStaResult.currentPrice / priceVolumeStaResult.currentPrice,\r\n        },\r\n        volume: {\r\n          inCurrency: priceVolumeStaResult.volumeInCurrency,\r\n          inSta: priceVolumeStaResult.volumeInSta,\r\n        },\r\n        supply: {\r\n          remainingSta: supplyStaResult,\r\n          remainingWSta: supplyWStaResult,\r\n          total: Big(STA_TOTAL_SUPPLY).toNumber(),\r\n        },\r\n        chart: {\r\n          price: chartResult.price,\r\n          volume: chartResult.volume,\r\n        },\r\n        meta: {\r\n          success: true,\r\n        }\r\n      })\r\n    }\r\n\r\n    case 'STATERA_ERROR': {\r\n\t\t\treturn Object.assign({}, INITIAL_STATE, {\r\n        meta: {\r\n          error: true,\r\n        }\r\n      })\r\n    }\r\n\r\n\t\tdefault: {\r\n\t\t\treturn state\r\n    }\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}