{"ast":null,"code":"export const genFormattedNumber = (number, dp) => {\n  const options = dp ? {\n    minimumFractionDigits: dp,\n    maximumFractionDigits: dp\n  } : undefined;\n  return Intl.NumberFormat('en-GB', options).format(number);\n};","map":{"version":3,"sources":["/Users/nco/Documents/GitHub/dashboard/src/util/numberFormat.ts"],"names":["genFormattedNumber","number","dp","options","minimumFractionDigits","maximumFractionDigits","undefined","Intl","NumberFormat","format"],"mappings":"AAAA,OAAO,MAAMA,kBAAkB,GAAG,CAACC,MAAD,EAAaC,EAAb,KAA4B;AAC5D,QAAMC,OAAO,GAAGD,EAAE,GAAG;AACnBE,IAAAA,qBAAqB,EAAEF,EADJ;AAEnBG,IAAAA,qBAAqB,EAAEH;AAFJ,GAAH,GAGdI,SAHJ;AAKA,SAAOC,IAAI,CAACC,YAAL,CAAkB,OAAlB,EAA2BL,OAA3B,EAAoCM,MAApC,CAA2CR,MAA3C,CAAP;AACD,CAPM","sourcesContent":["export const genFormattedNumber = (number:any, dp?:number) => {\r\n  const options = dp ? {\r\n    minimumFractionDigits: dp,\r\n    maximumFractionDigits: dp,\r\n  } : undefined\r\n\r\n  return Intl.NumberFormat('en-GB', options).format(number)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}