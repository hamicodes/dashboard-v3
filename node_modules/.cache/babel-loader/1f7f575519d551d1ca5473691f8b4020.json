{"ast":null,"code":"var _jsxFileName = \"/Users/nco/Documents/GitHub/dashboard/src/Components/ApyMetric/ApyMetric.tsx\";\nimport React, { useState } from 'react';\nimport classes from './ApyMetric.module.scss';\nimport cx from 'classnames';\nimport { useSelector } from 'react-redux';\nimport SegmentedTabs from '../SegmentedTabs/SegmentedTabs';\n\nconst ApyMetric = props => {\n  const poolState = useSelector(state => state.pool);\n  const [chartTimePeriod, setChartTimePeriod] = useState('7_day');\n\n  const handleChartTimePeriodTab = value => {\n    setChartTimePeriod(value);\n  };\n\n  let apy;\n\n  switch (chartTimePeriod) {\n    case '1_day':\n      {\n        var _poolState$data$apy;\n\n        apy = (_poolState$data$apy = poolState.data.apy) === null || _poolState$data$apy === void 0 ? void 0 : _poolState$data$apy.day1;\n        break;\n      }\n\n    case '7_day':\n      {\n        var _poolState$data$apy2;\n\n        apy = (_poolState$data$apy2 = poolState.data.apy) === null || _poolState$data$apy2 === void 0 ? void 0 : _poolState$data$apy2.day7;\n        break;\n      }\n\n    case '30_day':\n      {\n        var _poolState$data$apy3;\n\n        apy = (_poolState$data$apy3 = poolState.data.apy) === null || _poolState$data$apy3 === void 0 ? void 0 : _poolState$data$apy3.day30;\n        break;\n      }\n  }\n\n  const displayedApy = (apy * 100).toFixed(0);\n  let apyDom;\n\n  if (apy >= 0) {\n    apyDom = /*#__PURE__*/React.createElement(\"div\", {\n      className: cx(classes.apy, classes.green),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, \"+\", displayedApy, \"%\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.textDark,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, \"APY\"));\n  } else if (apy < 0) {\n    apyDom = /*#__PURE__*/React.createElement(\"div\", {\n      className: cx(classes.apy, classes.red),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, \"-\", displayedApy, \"%\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.textDark,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, \"APY\"));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, apyDom, /*#__PURE__*/React.createElement(SegmentedTabs, {\n    items: [{\n      text: '1D',\n      value: '1_day'\n    }, {\n      text: '7D',\n      value: '7_day'\n    }, {\n      text: '30D',\n      value: '30_day'\n    }],\n    value: chartTimePeriod,\n    onInput: handleChartTimePeriodTab,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ApyMetric;","map":{"version":3,"sources":["/Users/nco/Documents/GitHub/dashboard/src/Components/ApyMetric/ApyMetric.tsx"],"names":["React","useState","classes","cx","useSelector","SegmentedTabs","ApyMetric","props","poolState","state","pool","chartTimePeriod","setChartTimePeriod","handleChartTimePeriodTab","value","apy","data","day1","day7","day30","displayedApy","toFixed","apyDom","green","textDark","red","container","text"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,aAAP,MAA0B,gCAA1B;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAe;AAC/B,QAAMC,SAAS,GAAGJ,WAAW,CAAEK,KAAD,IAAeA,KAAK,CAACC,IAAtB,CAA7B;AAEA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCX,QAAQ,CAAC,OAAD,CAAtD;;AAEA,QAAMY,wBAAwB,GAAIC,KAAD,IAAkB;AACjDF,IAAAA,kBAAkB,CAACE,KAAD,CAAlB;AACD,GAFD;;AAIA,MAAIC,GAAJ;;AACA,UAAQJ,eAAR;AACE,SAAK,OAAL;AAAc;AAAA;;AACZI,QAAAA,GAAG,0BAAGP,SAAS,CAACQ,IAAV,CAAeD,GAAlB,wDAAG,oBAAoBE,IAA1B;AACA;AACD;;AACD,SAAK,OAAL;AAAc;AAAA;;AACZF,QAAAA,GAAG,2BAAGP,SAAS,CAACQ,IAAV,CAAeD,GAAlB,yDAAG,qBAAoBG,IAA1B;AACA;AACD;;AACD,SAAK,QAAL;AAAe;AAAA;;AACbH,QAAAA,GAAG,2BAAGP,SAAS,CAACQ,IAAV,CAAeD,GAAlB,yDAAG,qBAAoBI,KAA1B;AACA;AACD;AAZH;;AAeA,QAAMC,YAAY,GAAG,CAACL,GAAG,GAAG,GAAP,EAAYM,OAAZ,CAAoB,CAApB,CAArB;AAEA,MAAIC,MAAJ;;AACA,MAAIP,GAAG,IAAI,CAAX,EAAc;AACZO,IAAAA,MAAM,gBACJ;AAAK,MAAA,SAAS,EAAEnB,EAAE,CAACD,OAAO,CAACa,GAAT,EAAcb,OAAO,CAACqB,KAAtB,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAASH,YAAT,MADF,eAEE;AAAM,MAAA,SAAS,EAAElB,OAAO,CAACsB,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,CADF;AAMD,GAPD,MAOO,IAAIT,GAAG,GAAG,CAAV,EAAa;AAClBO,IAAAA,MAAM,gBACJ;AAAK,MAAA,SAAS,EAAEnB,EAAE,CAACD,OAAO,CAACa,GAAT,EAAcb,OAAO,CAACuB,GAAtB,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAASL,YAAT,MADF,eAEE;AAAM,MAAA,SAAS,EAAElB,OAAO,CAACsB,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,CADF;AAMD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAEtB,OAAO,CAACwB,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIJ,MADJ,eAGE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAE,CAAC;AACNK,MAAAA,IAAI,EAAE,IADA;AAENb,MAAAA,KAAK,EAAE;AAFD,KAAD,EAGJ;AACDa,MAAAA,IAAI,EAAE,IADL;AAEDb,MAAAA,KAAK,EAAE;AAFN,KAHI,EAMJ;AACDa,MAAAA,IAAI,EAAE,KADL;AAEDb,MAAAA,KAAK,EAAE;AAFN,KANI,CADT;AAWE,IAAA,KAAK,EAAEH,eAXT;AAYE,IAAA,OAAO,EAAEE,wBAZX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAoBD,CAhED;;AAkEA,eAAeP,SAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport classes from './ApyMetric.module.scss'\r\nimport cx from 'classnames'\r\nimport { useSelector } from 'react-redux'\r\nimport SegmentedTabs from '../SegmentedTabs/SegmentedTabs'\r\n\r\nconst ApyMetric = (props:any) => {\r\n  const poolState = useSelector((state:any) => state.pool)\r\n\r\n  const [chartTimePeriod, setChartTimePeriod] = useState('7_day')\r\n\r\n  const handleChartTimePeriodTab = (value:string) => {\r\n    setChartTimePeriod(value)\r\n  }\r\n\r\n  let apy\r\n  switch (chartTimePeriod) {\r\n    case '1_day': {\r\n      apy = poolState.data.apy?.day1\r\n      break;\r\n    }\r\n    case '7_day': {\r\n      apy = poolState.data.apy?.day7\r\n      break;\r\n    }\r\n    case '30_day': {\r\n      apy = poolState.data.apy?.day30\r\n      break;\r\n    }\r\n  }\r\n\r\n  const displayedApy = (apy * 100).toFixed(0)\r\n\r\n  let apyDom\r\n  if (apy >= 0) {\r\n    apyDom = (\r\n      <div className={cx(classes.apy, classes.green)}>\r\n        <span>+{ displayedApy }%</span>\r\n        <span className={classes.textDark}>APY</span>\r\n      </div>\r\n    )\r\n  } else if (apy < 0) {\r\n    apyDom = (\r\n      <div className={cx(classes.apy, classes.red)}>\r\n        <span>-{ displayedApy }%</span>\r\n        <span className={classes.textDark}>APY</span>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      { apyDom }\r\n\r\n      <SegmentedTabs\r\n        items={[{\r\n          text: '1D',\r\n          value: '1_day',\r\n        }, {\r\n          text: '7D',\r\n          value: '7_day',\r\n        }, {\r\n          text: '30D',\r\n          value: '30_day',\r\n        }]}\r\n        value={chartTimePeriod}\r\n        onInput={handleChartTimePeriodTab}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ApyMetric\r\n"]},"metadata":{},"sourceType":"module"}