{"ast":null,"code":"var _jsxFileName = \"/Users/nco/Documents/GitHub/dashboard/src/App.tsx\";\nimport React, { useContext, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\nimport Modal from \"react-modal\";\nimport { Web3ReactProvider } from '@web3-react/core';\nimport { Web3Provider } from '@ethersproject/providers';\nimport { useEagerConnect } from './hooks/useEagerConnect';\nimport { useInactiveListener } from './hooks/useInactiveListener';\nimport ReactDOM from 'react-dom';\nimport { Context, Store } from './Store';\nimport { fetchETHPrice } from './hooks/useGlobalState';\nimport { useApiResult } from './hooks/useApiResult';\nimport classes from \"./App.module.scss\";\nimport logo from \"./assets/images/pools/statera.png\"; // Components\n\nimport Sidebar from './Components/Sidebar/Sidebar'; // import Dashboard from './Components/Dashboard'\n// import PoolView from './Components/PoolView'\n\nimport IndexPage from './pages/IndexPage';\nimport StaPage from './pages/StaPage';\nimport PoolPage from './pages/PoolPage';\nModal.setAppElement('#root');\n\nconst getLibrary = provider => new Web3Provider(provider);\n\nconst EagerConnect = () => {\n  const triedEager = useEagerConnect();\n  useInactiveListener(!triedEager);\n  return null;\n};\n\nconst uniswapGraphClient = new ApolloClient({\n  cache: new InMemoryCache(),\n  uri: \"https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v2\"\n});\n\nconst LoadingScreen = () => {\n  document.getElementById(\"loading\").className += \" loading-container\";\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-row relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    className: \"w-12 h-12\",\n    alt: \"statera\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font-bold text-gradient text-3xl ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"Statera\")));\n};\n\nconst renderLoading = () => {\n  ReactDOM.render( /*#__PURE__*/React.createElement(LoadingScreen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }), document.getElementById(\"loading\"));\n};\n\nconst Loader = () => {\n  const {\n    dispatch\n  } = useContext(Context);\n  useEffect(() => {\n    renderLoading();\n\n    (async () => {\n      dispatch({\n        type: \"SET_ethPrice\",\n        data: await fetchETHPrice()\n      });\n    })();\n  }, [dispatch]);\n  return null;\n};\n\nconst StatsDataLoader = () => {\n  const data = useApiResult(\"/stats\", {}).data;\n  const {\n    dispatch\n  } = useContext(Context);\n  useEffect(() => {\n    if (data) dispatch({\n      type: \"SET_statsData\",\n      data\n    });\n  }, [data, dispatch]);\n  return null;\n};\n\nconst ChartDataLoader = () => {\n  const data = useApiResult(\"/chartdata\", {}).data;\n  const {\n    dispatch\n  } = useContext(Context);\n  useEffect(() => {\n    if (data) {\n      if (data[\"volumes\"]) {\n        const allVolumes = {};\n        Object.keys(data[\"volumes\"] || {}).forEach(pool => {\n          const poolVolumes = data[\"volumes\"][pool][\"all\"] || [];\n          poolVolumes.forEach(([timestamp, value], i) => {\n            allVolumes[timestamp] = (allVolumes[timestamp] || 0) + value;\n          });\n        });\n        data[\"volumes\"][\"all\"] = {\n          all: Object.keys(allVolumes).map(timestamp => [timestamp, allVolumes[parseInt(timestamp)]])\n        };\n      }\n\n      dispatch({\n        type: \"SET_chartData\",\n        data\n      });\n    }\n  }, [data, dispatch]);\n  return null;\n};\n\nconst App = () => {\n  return /*#__PURE__*/React.createElement(ApolloProvider, {\n    client: uniswapGraphClient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Web3ReactProvider, {\n    getLibrary: getLibrary,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Store, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(EagerConnect, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.app,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.sidebarContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Sidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: IndexPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/sta\",\n    component: StaPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/pool/:contract_address\",\n    component: PoolPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 37\n    }\n  }))))))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/nco/Documents/GitHub/dashboard/src/App.tsx"],"names":["React","useContext","useEffect","BrowserRouter","Router","Route","Switch","ApolloClient","ApolloProvider","InMemoryCache","Modal","Web3ReactProvider","Web3Provider","useEagerConnect","useInactiveListener","ReactDOM","Context","Store","fetchETHPrice","useApiResult","classes","logo","Sidebar","IndexPage","StaPage","PoolPage","setAppElement","getLibrary","provider","EagerConnect","triedEager","uniswapGraphClient","cache","uri","LoadingScreen","document","getElementById","className","renderLoading","render","Loader","dispatch","type","data","StatsDataLoader","ChartDataLoader","allVolumes","Object","keys","forEach","pool","poolVolumes","timestamp","value","i","all","map","parseInt","App","app","sidebarContainer","main"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,SAASC,YAAT,EAAuBC,cAAvB,EAAuCC,aAAvC,QAA4D,gBAA5D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,SAASC,mBAAT,QAAoC,6BAApC;AAEA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,OAAT,EAAkBC,KAAlB,QAA+B,SAA/B;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,IAAP,MAAiB,mCAAjB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,8BAApB,C,CACA;AACA;;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AAGAf,KAAK,CAACgB,aAAN,CAAoB,OAApB;;AAEA,MAAMC,UAAU,GAAIC,QAAD,IAAmB,IAAIhB,YAAJ,CAAiBgB,QAAjB,CAAtC;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACvB,QAAMC,UAAU,GAAGjB,eAAe,EAAlC;AACAC,EAAAA,mBAAmB,CAAC,CAACgB,UAAF,CAAnB;AACA,SAAO,IAAP;AACH,CAJD;;AAMA,MAAMC,kBAAkB,GAAG,IAAIxB,YAAJ,CAAiB;AACxCyB,EAAAA,KAAK,EAAE,IAAIvB,aAAJ,EADiC;AAExCwB,EAAAA,GAAG,EAAE;AAFmC,CAAjB,CAA3B;;AAKA,MAAMC,aAAa,GAAG,MAAM;AACxBC,EAAAA,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAoCC,SAApC,IAAiD,oBAAjD;AACA,sBAAO,uDACH;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAEhB,IAAV;AAAgB,IAAA,SAAS,EAAC,WAA1B;AAAsC,IAAA,GAAG,EAAC,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAM,IAAA,SAAS,EAAC,uCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,CADG,CAAP;AAMH,CARD;;AAUA,MAAMiB,aAAa,GAAG,MAAM;AACxBvB,EAAAA,QAAQ,CAACwB,MAAT,eAAgB,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB,EAAmCJ,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAnC;AACH,CAFD;;AAIA,MAAMI,MAAM,GAAG,MAAM;AACjB,QAAM;AAAEC,IAAAA;AAAF,MAAexC,UAAU,CAACe,OAAD,CAA/B;AACAd,EAAAA,SAAS,CAAC,MAAM;AACZoC,IAAAA,aAAa;;AACZ,KAAC,YAAY;AACVG,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,cAAR;AAAwBC,QAAAA,IAAI,EAAE,MAAMzB,aAAa;AAAjD,OAAD,CAAR;AACH,KAFA;AAGJ,GALQ,EAKN,CAACuB,QAAD,CALM,CAAT;AAMA,SAAO,IAAP;AACH,CATD;;AAWA,MAAMG,eAAe,GAAG,MAAM;AAC1B,QAAMD,IAAI,GAAGxB,YAAY,CAAC,QAAD,EAAW,EAAX,CAAZ,CAA2BwB,IAAxC;AACA,QAAM;AAAEF,IAAAA;AAAF,MAAexC,UAAU,CAACe,OAAD,CAA/B;AACAd,EAAAA,SAAS,CAAC,MAAM;AAAE,QAAIyC,IAAJ,EAAUF,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,eAAR;AAAyBC,MAAAA;AAAzB,KAAD,CAAR;AAA2C,GAA9D,EAAgE,CAACA,IAAD,EAAOF,QAAP,CAAhE,CAAT;AACA,SAAO,IAAP;AACH,CALD;;AAMA,MAAMI,eAAe,GAAG,MAAM;AAC1B,QAAMF,IAAI,GAAGxB,YAAY,CAAC,YAAD,EAAe,EAAf,CAAZ,CAA+BwB,IAA5C;AACA,QAAM;AAAEF,IAAAA;AAAF,MAAexC,UAAU,CAACe,OAAD,CAA/B;AACAd,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIyC,IAAJ,EAAU;AACN,UAAIA,IAAI,CAAC,SAAD,CAAR,EAAqB;AACjB,cAAMG,UAA2C,GAAG,EAApD;AACAC,QAAAA,MAAM,CAACC,IAAP,CAAYL,IAAI,CAAC,SAAD,CAAJ,IAAmB,EAA/B,EAAmCM,OAAnC,CAA2CC,IAAI,IAAI;AAC/C,gBAAMC,WAAW,GAAGR,IAAI,CAAC,SAAD,CAAJ,CAAgBO,IAAhB,EAAsB,KAAtB,KAAgC,EAApD;AACAC,UAAAA,WAAW,CAACF,OAAZ,CAAoB,CAAC,CAACG,SAAD,EAAYC,KAAZ,CAAD,EAAuCC,CAAvC,KAAqD;AACrER,YAAAA,UAAU,CAACM,SAAD,CAAV,GAAwB,CAACN,UAAU,CAACM,SAAD,CAAV,IAAyB,CAA1B,IAA+BC,KAAvD;AACH,WAFD;AAGH,SALD;AAMAV,QAAAA,IAAI,CAAC,SAAD,CAAJ,CAAgB,KAAhB,IAAyB;AAAEY,UAAAA,GAAG,EAAER,MAAM,CAACC,IAAP,CAAYF,UAAZ,EAAwBU,GAAxB,CAA4BJ,SAAS,IAAI,CAACA,SAAD,EAAYN,UAAU,CAACW,QAAQ,CAACL,SAAD,CAAT,CAAtB,CAAzC;AAAP,SAAzB;AACH;;AACDX,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,eAAR;AAAyBC,QAAAA;AAAzB,OAAD,CAAR;AACH;AACJ,GAdQ,EAcN,CAACA,IAAD,EAAOF,QAAP,CAdM,CAAT;AAeA,SAAO,IAAP;AACH,CAnBD;;AAqBA,MAAMiB,GAAG,GAAG,MAAM;AACd,sBACI,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAE3B,kBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,iBAAD;AAAmB,IAAA,UAAU,EAAEJ,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAII,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAEP,OAAO,CAACuC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAEvC,OAAO,CAACwC,gBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAII;AAAK,IAAA,SAAS,EAAExC,OAAO,CAACyC,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAEtC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,MAAlB;AAAyB,IAAA,SAAS,EAAEC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,yBAAlB;AAA4C,IAAA,SAAS,EAAEC,QAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ,CAJJ,CADJ,CAJJ,CADJ,CADJ,CADJ;AAyBH,CA1BD;;AA4BA,eAAeiC,GAAf","sourcesContent":["import React, { useContext, useEffect } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\"\nimport Modal from \"react-modal\"\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { useEagerConnect } from './hooks/useEagerConnect'\nimport { useInactiveListener } from './hooks/useInactiveListener'\nimport { Pool } from './Constants/Pool'\nimport ReactDOM from 'react-dom'\nimport { Context, Store } from './Store'\nimport { fetchETHPrice } from './hooks/useGlobalState'\nimport { useApiResult } from './hooks/useApiResult'\nimport classes from \"./App.module.scss\"\nimport logo from \"./assets/images/pools/statera.png\"\n// Components\nimport Sidebar from './Components/Sidebar/Sidebar'\n// import Dashboard from './Components/Dashboard'\n// import PoolView from './Components/PoolView'\nimport IndexPage from './pages/IndexPage'\nimport StaPage from './pages/StaPage'\nimport PoolPage from './pages/PoolPage'\n\n\nModal.setAppElement('#root')\n\nconst getLibrary = (provider: any) => new Web3Provider(provider)\n\nconst EagerConnect = () => {\n    const triedEager = useEagerConnect()\n    useInactiveListener(!triedEager)\n    return null\n}\n\nconst uniswapGraphClient = new ApolloClient({\n    cache: new InMemoryCache(),\n    uri: \"https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v2\"\n})\n\nconst LoadingScreen = () => {\n    document.getElementById(\"loading\")!.className += \" loading-container\"\n    return <>\n        <div className=\"flex flex-row relative\">\n            <img src={logo} className=\"w-12 h-12\" alt=\"statera\" />\n            <span className=\"font-bold text-gradient text-3xl ml-2\">Statera</span>\n        </div>\n    </>\n}\n\nconst renderLoading = () => {\n    ReactDOM.render(<LoadingScreen />, document.getElementById(\"loading\"))\n}\n\nconst Loader = () => {\n    const { dispatch } = useContext(Context)\n    useEffect(() => {\n        renderLoading()\n        ;(async () => {\n            dispatch({ type: \"SET_ethPrice\", data: await fetchETHPrice() })\n        })()\n    }, [dispatch])\n    return null\n}\n\nconst StatsDataLoader = () => {\n    const data = useApiResult(\"/stats\", {}).data\n    const { dispatch } = useContext(Context)\n    useEffect(() => { if (data) dispatch({ type: \"SET_statsData\", data }) }, [data, dispatch])\n    return null\n}\nconst ChartDataLoader = () => {\n    const data = useApiResult(\"/chartdata\", {}).data as any\n    const { dispatch } = useContext(Context)\n    useEffect(() => {\n        if (data) {\n            if (data[\"volumes\"]) {\n                const allVolumes: { [timestamp: number]: number } = {}\n                Object.keys(data[\"volumes\"] || {}).forEach(pool => {\n                    const poolVolumes = data[\"volumes\"][pool][\"all\"] || []\n                    poolVolumes.forEach(([timestamp, value]: [number, number], i: number) => {\n                        allVolumes[timestamp] = (allVolumes[timestamp] || 0) + value\n                    })\n                })\n                data[\"volumes\"][\"all\"] = { all: Object.keys(allVolumes).map(timestamp => [timestamp, allVolumes[parseInt(timestamp)]]) }\n            }\n            dispatch({ type: \"SET_chartData\", data })\n        }\n    }, [data, dispatch])\n    return null\n}\n\nconst App = () => {\n    return (\n        <ApolloProvider client={uniswapGraphClient}>\n            <Web3ReactProvider getLibrary={getLibrary}>\n                <Store>\n                    {/* <StatsDataLoader /> */}\n                    {/* <ChartDataLoader /> */}\n                    <EagerConnect />\n                    <Router>\n                        <div className={classes.app}>\n                            <div className={classes.sidebarContainer}>\n                                <Sidebar />\n                            </div>\n                            <div className={classes.main}>\n                                <Switch>\n                                    <Route exact path=\"/\" component={IndexPage} />\n                                    <Route exact path=\"/sta\" component={StaPage} />\n                                    <Route exact path=\"/pool/:contract_address\" component={PoolPage} />\n                                </Switch>\n                            </div>\n                        </div>\n                    </Router>\n                </Store>\n            </Web3ReactProvider>\n        </ApolloProvider>\n    )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}