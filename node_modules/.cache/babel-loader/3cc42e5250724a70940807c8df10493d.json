{"ast":null,"code":"var _jsxFileName = \"/Users/nco/Documents/GitHub/dashboard/src/Components/Wallet/Wallet.tsx\";\nimport React from 'react';\nimport classes from './Wallet.module.scss';\nimport StaButton from '../StaButton/StaButton';\nimport { useWeb3React } from '@web3-react/core';\nimport { injected, walletConnect } from '../../web3/connectors';\nimport { POOLS, ASSETS } from '../../Constants/Constants';\nimport _ from 'lodash';\n\nconst Wallet = props => {\n  const {\n    isStaPage,\n    poolContractAddress\n  } = props;\n  const web3 = useWeb3React();\n  const {\n    activate,\n    deactivate,\n    account,\n    active\n  } = web3; // TODO: web3 work goes here ;)\n  // Resolve the\n\n  let assetContractAddress = [];\n\n  if (isStaPage) {\n    var _ASSETS$find, _ASSETS$find2;\n\n    assetContractAddress.push((_ASSETS$find = ASSETS.find(item => item.ticker === 'STA')) === null || _ASSETS$find === void 0 ? void 0 : _ASSETS$find.contractAddress);\n    assetContractAddress.push((_ASSETS$find2 = ASSETS.find(item => item.ticker === 'wSTA')) === null || _ASSETS$find2 === void 0 ? void 0 : _ASSETS$find2.contractAddress);\n  } else {\n    let currentPool;\n\n    _.mapValues(POOLS, (value, key) => {\n      if (value.contractAddress === poolContractAddress) {\n        currentPool = value;\n      }\n    });\n\n    if (currentPool) {\n      currentPool.assets.forEach(item => {\n        assetContractAddress.push(item.contractAddress);\n      });\n    }\n  }\n\n  console.log('assetContractAddress: ', assetContractAddress); // TODO: Retrieve the balances of each of these assets in the users' wallet\n\n  let walletDom;\n\n  if (account) {\n    walletDom = /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.section,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, \"Connected! \", account);\n  } else {\n    walletDom = /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.section,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(StaButton, {\n      onClick: () => {\n        activate(injected);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, \"Connect with Metamask\"), /*#__PURE__*/React.createElement(StaButton, {\n      onClick: () => {\n        activate(walletConnect, undefined, true);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, \"Connect with Walletconnect\"));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, walletDom);\n};\n\nexport default Wallet;","map":{"version":3,"sources":["/Users/nco/Documents/GitHub/dashboard/src/Components/Wallet/Wallet.tsx"],"names":["React","classes","StaButton","useWeb3React","injected","walletConnect","POOLS","ASSETS","_","Wallet","props","isStaPage","poolContractAddress","web3","activate","deactivate","account","active","assetContractAddress","push","find","item","ticker","contractAddress","currentPool","mapValues","value","key","assets","forEach","console","log","walletDom","section","undefined","container"],"mappings":";AAAA,OAAOA,KAAP,MAAgC,OAAhC;AAEA,OAAOC,OAAP,MAAoB,sBAApB;AAGA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,YAAT,QAAkD,kBAAlD;AACA,SAASC,QAAT,EAAmBC,aAAnB,QAAwC,uBAAxC;AAEA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,2BAA9B;AACA,OAAOC,CAAP,MAAc,QAAd;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAe;AAC5B,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAqCF,KAA3C;AAEA,QAAMG,IAAI,GAAGV,YAAY,EAAzB;AACA,QAAM;AAAEW,IAAAA,QAAF;AAAYC,IAAAA,UAAZ;AAAwBC,IAAAA,OAAxB;AAAiCC,IAAAA;AAAjC,MAA4CJ,IAAlD,CAJ4B,CAM5B;AACA;;AACA,MAAIK,oBAAwB,GAAG,EAA/B;;AACA,MAAIP,SAAJ,EAAe;AAAA;;AACbO,IAAAA,oBAAoB,CAACC,IAArB,iBAA0BZ,MAAM,CAACa,IAAP,CAAYC,IAAI,IAAIA,IAAI,CAACC,MAAL,KAAgB,KAApC,CAA1B,iDAA0B,aAC1BC,eADA;AAEAL,IAAAA,oBAAoB,CAACC,IAArB,kBAA0BZ,MAAM,CAACa,IAAP,CAAYC,IAAI,IAAIA,IAAI,CAACC,MAAL,KAAgB,MAApC,CAA1B,kDAA0B,cAA6CC,eAAvE;AACD,GAJD,MAIO;AACL,QAAIC,WAAJ;;AACAhB,IAAAA,CAAC,CAACiB,SAAF,CAAYnB,KAAZ,EAAmB,CAACoB,KAAD,EAAQC,GAAR,KAAgB;AACjC,UAAID,KAAK,CAACH,eAAN,KAA0BX,mBAA9B,EAAmD;AACjDY,QAAAA,WAAW,GAAGE,KAAd;AACD;AACF,KAJD;;AAKA,QAAIF,WAAJ,EAAiB;AACfA,MAAAA,WAAW,CAACI,MAAZ,CAAmBC,OAAnB,CAA4BR,IAAD,IAAc;AACvCH,QAAAA,oBAAoB,CAACC,IAArB,CAA0BE,IAAI,CAACE,eAA/B;AACD,OAFD;AAGD;AACF;;AACDO,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCb,oBAAtC,EA1B4B,CA2B5B;;AAEA,MAAIc,SAAJ;;AACA,MAAIhB,OAAJ,EAAa;AACXgB,IAAAA,SAAS,gBACP;AAAK,MAAA,SAAS,EAAE/B,OAAO,CAACgC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACejB,OADf,CADF;AAKD,GAND,MAMO;AACLgB,IAAAA,SAAS,gBACP;AAAK,MAAA,SAAS,EAAE/B,OAAO,CAACgC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAE,MAAM;AAAEnB,QAAAA,QAAQ,CAACV,QAAD,CAAR;AAAoB,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,eAKE,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAE,MAAM;AAAEU,QAAAA,QAAQ,CAACT,aAAD,EAAgB6B,SAAhB,EAA2B,IAA3B,CAAR;AAA0C,OAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCALF,CADF;AAWD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAEjC,OAAO,CAACkC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA0BIH,SA1BJ,CADF;AA8BD,CAhFD;;AAkFA,eAAevB,MAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classes from './Wallet.module.scss'\r\nimport cx from 'classnames'\r\nimport { useSelector } from 'react-redux'\r\nimport StaButton from '../StaButton/StaButton'\r\nimport { useWeb3React, getWeb3ReactContext } from '@web3-react/core'\r\nimport { injected, walletConnect } from '../../web3/connectors'\r\nimport { useTokenBalance } from '../../hooks/useTokenBalance'\r\nimport { POOLS, ASSETS } from '../../Constants/Constants'\r\nimport _ from 'lodash'\r\n\r\nconst Wallet = (props:any) => {\r\n  const { isStaPage, poolContractAddress } = props\r\n\r\n  const web3 = useWeb3React()\r\n  const { activate, deactivate, account, active } = web3\r\n\r\n  // TODO: web3 work goes here ;)\r\n  // Resolve the\r\n  let assetContractAddress:any = []\r\n  if (isStaPage) {\r\n    assetContractAddress.push(ASSETS.find(item => item.ticker === 'STA')?.\r\n    contractAddress)\r\n    assetContractAddress.push(ASSETS.find(item => item.ticker === 'wSTA')?.contractAddress)\r\n  } else {\r\n    let currentPool:any\r\n    _.mapValues(POOLS, (value, key) => {\r\n      if (value.contractAddress === poolContractAddress) {\r\n        currentPool = value\r\n      }\r\n    })\r\n    if (currentPool) {\r\n      currentPool.assets.forEach((item:any) => {\r\n        assetContractAddress.push(item.contractAddress)\r\n      })\r\n    }\r\n  }\r\n  console.log('assetContractAddress: ', assetContractAddress);\r\n  // TODO: Retrieve the balances of each of these assets in the users' wallet\r\n\r\n  let walletDom\r\n  if (account) {\r\n    walletDom = (\r\n      <div className={classes.section}>\r\n        Connected! { account }\r\n      </div>\r\n    )\r\n  } else {\r\n    walletDom = (\r\n      <div className={classes.section}>\r\n        <StaButton onClick={() => { activate(injected) }}>\r\n          Connect with Metamask\r\n        </StaButton>\r\n\r\n        <StaButton onClick={() => { activate(walletConnect, undefined, true) }}>\r\n          Connect with Walletconnect\r\n        </StaButton>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      {/* <div className={classes.gridItem}>\r\n        <div className={classes.title}>My Wallet</div>\r\n      </div>\r\n\r\n      <div className={classes.gridItem}>\r\n        <div className={classes.title}>My Liquidity</div>\r\n      </div>\r\n\r\n      <div className={classes.gridItem}>\r\n        <div className={classes.title}>Actions</div>\r\n        <StaButton\r\n          to=\"https://app.uniswap.org/#/add/TOKEN1/TOKEN2\"\r\n          target=\"_blank\"\r\n        >\r\n          Add Liquidity\r\n        </StaButton>\r\n\r\n        <StaButton\r\n          to=\"https://app.uniswap.org/#/remove/TOKEN1/TOKEN2\"\r\n          target=\"_blank\"\r\n        >\r\n          Remove Liquidity\r\n        </StaButton>\r\n      </div> */}\r\n\r\n      { walletDom }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Wallet\r\n"]},"metadata":{},"sourceType":"module"}