{"ast":null,"code":"import { useEffect, useState } from \"react\";\nimport { Api } from \"../util/api\";\nexport const useApiResult = (endpoint, initialData, absolute = false, maxRetries = 5) => {\n  const [data, setData] = useState(initialData);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState();\n  const [retries, setRetries] = useState(0);\n  useEffect(() => {\n    const fetchData = async () => {\n      setError(null);\n      setLoading(true);\n\n      try {\n        setData(await Api.get(endpoint, absolute));\n        setRetries(0);\n      } catch (e) {\n        setError(e.toString());\n\n        if (retries < maxRetries) {\n          setRetries(retries + 1);\n          setTimeout(fetchData, 1000); // retry after 1s\n        }\n      }\n    };\n\n    fetchData();\n  }, [endpoint]); //eslint-disable-line react-hooks/exhaustive-deps\n\n  return {\n    data,\n    loading,\n    error\n  };\n};","map":{"version":3,"sources":["/Users/nco/Documents/GitHub/dashboard/src/hooks/useApiResult.ts"],"names":["useEffect","useState","Api","useApiResult","endpoint","initialData","absolute","maxRetries","data","setData","loading","setLoading","error","setError","retries","setRetries","fetchData","get","e","toString","setTimeout"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,GAAT,QAAoB,aAApB;AAEA,OAAO,MAAMC,YAAY,GAAG,CAAIC,QAAJ,EAAsBC,WAAtB,EAAsCC,QAAQ,GAAG,KAAjD,EAAwDC,UAAU,GAAG,CAArE,KAA2E;AACnG,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAACI,WAAD,CAAhC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,EAAlC;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,CAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMgB,SAAS,GAAG,YAAY;AAC1BH,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAF,MAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,UAAI;AACAF,QAAAA,OAAO,CAAC,MAAMP,GAAG,CAACe,GAAJ,CAAQb,QAAR,EAAkBE,QAAlB,CAAP,CAAP;AACAS,QAAAA,UAAU,CAAC,CAAD,CAAV;AACH,OAHD,CAGE,OAAOG,CAAP,EAAU;AACRL,QAAAA,QAAQ,CAACK,CAAC,CAACC,QAAF,EAAD,CAAR;;AACA,YAAIL,OAAO,GAAGP,UAAd,EAA0B;AACtBQ,UAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACAM,UAAAA,UAAU,CAACJ,SAAD,EAAY,IAAZ,CAAV,CAFsB,CAEM;AAC/B;AACJ;AACJ,KAbD;;AAcAA,IAAAA,SAAS;AACZ,GAhBQ,EAgBN,CAACZ,QAAD,CAhBM,CAAT,CANmG,CAsBpF;;AAEf,SAAO;AAAEI,IAAAA,IAAF;AAAQE,IAAAA,OAAR;AAAiBE,IAAAA;AAAjB,GAAP;AACH,CAzBM","sourcesContent":["import { useEffect, useState } from \"react\"\nimport { Api } from \"../util/api\"\n\nexport const useApiResult = <T>(endpoint: string, initialData: T, absolute = false, maxRetries = 5) => {\n    const [data, setData] = useState(initialData)\n    const [loading, setLoading] = useState(false)\n    const [error, setError] = useState<string | null>()\n    const [retries, setRetries] = useState(0)\n\n    useEffect(() => {\n        const fetchData = async () => {\n            setError(null)\n            setLoading(true)\n            try {\n                setData(await Api.get(endpoint, absolute))\n                setRetries(0)\n            } catch (e) {\n                setError(e.toString())\n                if (retries < maxRetries) {\n                    setRetries(retries + 1)\n                    setTimeout(fetchData, 1000) // retry after 1s\n                }\n            }\n        }\n        fetchData()\n    }, [endpoint]) //eslint-disable-line react-hooks/exhaustive-deps\n\n    return { data, loading, error }\n}"]},"metadata":{},"sourceType":"module"}