{"ast":null,"code":"var _jsxFileName = \"/Users/nco/Documents/GitHub/dashboard/src/pages/MultiPoolPage.tsx\";\nimport React, { useEffect, useRef } from 'react';\nimport { useParams } from 'react-router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loadMultiPool } from '../store/actions/multiPool';\nimport PageHeader from '../Components/PageHeader/PageHeader';\nimport classes from './PoolPage.module.scss';\nimport Metric from '../Components/Metric/Metric';\nimport { genFormattedNumber } from '../util/numberFormat';\nimport { Chart } from 'react-google-charts';\nimport Loader from '../Components/Loader/Loader';\n\nconst MultiPoolPage = () => {\n  const mounted = useRef();\n  const params = useParams();\n  const contractAddress = params.contract_address;\n  const dispatch = useDispatch();\n  const multiPoolState = useSelector(state => state.multiPool);\n  useEffect(() => {\n    if (!mounted.current) {\n      // do componentDidMount logic\n      dispatch({\n        type: 'SET_MULTI_POOL',\n        payload: {\n          contractAddress\n        }\n      });\n      dispatch(loadMultiPool());\n      mounted.current = true;\n    } else {\n      // do componentDidUpdate logic\n      if (contractAddress && contractAddress !== multiPoolState.contractAddress) {\n        dispatch({\n          type: 'RESET_MULTI_POOL'\n        });\n        dispatch({\n          type: 'SET_MULTI_POOL',\n          payload: {\n            contractAddress\n          }\n        });\n        dispatch(loadMultiPool());\n      }\n    }\n  });\n\n  if (multiPoolState.meta.success) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.dashboardContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(PageHeader, {\n      title: multiPoolState.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.dashboard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.dashboardLeft,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.threeGrid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Metric, {\n      className: classes.metric,\n      label: \"Holder Count\",\n      valueItems: [{\n        value: multiPoolState.data.liquidityProviderCount\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Metric, {\n      className: classes.metric,\n      label: \"Asset Value\",\n      valueItems: [{\n        value: genFormattedNumber(multiPoolState.data.assetValue, 2),\n        unit: 'USD'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Metric, {\n      className: classes.metric,\n      label: \"Liquidity\",\n      valueItems: [{\n        value: genFormattedNumber(multiPoolState.data.liquidity, 2),\n        unit: 'USD'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Metric, {\n      className: classes.metric,\n      label: \"24H Volume\",\n      valueItems: [{\n        value: genFormattedNumber(multiPoolState.data.volume, 2),\n        unit: 'USD'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Metric, {\n      className: classes.metric,\n      label: \"24H Fees Earned\",\n      valueItems: [{\n        value: genFormattedNumber(multiPoolState.data.feesEarned, 2),\n        unit: 'USD'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Metric, {\n      className: classes.metric,\n      label: \"24H Fees APY\",\n      valueItems: [{\n        value: genFormattedNumber(multiPoolState.data.feesApy * 100, 2),\n        unit: '%'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.dashboardRight,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.cardTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, \"Assets\"), /*#__PURE__*/React.createElement(Chart, {\n      width: '100%',\n      height: '200px',\n      chartType: \"PieChart\",\n      loader: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 27\n        }\n      }, \"Loading Chart\"),\n      data: [['Asset', 'Portion'], ...multiPoolState.assets.map(item => [item.ticker, item.proportion])],\n      options: {\n        chartArea: {\n          left: 0,\n          top: 10,\n          width: '100%',\n          height: '90%'\n        },\n        legend: 'none',\n        pieSliceText: 'label'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.wallet,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(Loader, {\n      size: \"medium\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 12\n      }\n    });\n  }\n};\n\nexport default MultiPoolPage;","map":{"version":3,"sources":["/Users/nco/Documents/GitHub/dashboard/src/pages/MultiPoolPage.tsx"],"names":["React","useEffect","useRef","useParams","useDispatch","useSelector","loadMultiPool","PageHeader","classes","Metric","genFormattedNumber","Chart","Loader","MultiPoolPage","mounted","params","contractAddress","contract_address","dispatch","multiPoolState","state","multiPool","current","type","payload","meta","success","container","dashboardContainer","name","dashboard","dashboardLeft","threeGrid","card","metric","value","data","liquidityProviderCount","assetValue","unit","liquidity","volume","feesEarned","feesApy","dashboardRight","cardTitle","assets","map","item","ticker","proportion","chartArea","left","top","width","height","legend","pieSliceText","wallet"],"mappings":"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","sourcesContent":["import React, { FunctionComponent, useState, useEffect, useRef } from 'react'\r\nimport { useParams } from 'react-router'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { loadMultiPool } from '../store/actions/multiPool'\r\nimport PageHeader from '../Components/PageHeader/PageHeader'\r\nimport classes from './PoolPage.module.scss'\r\nimport Metric from '../Components/Metric/Metric'\r\nimport _ from 'lodash'\r\nimport { genFormattedNumber } from '../util/numberFormat'\r\nimport { Chart } from 'react-google-charts'\r\nimport Loader from '../Components/Loader/Loader'\r\n\r\nconst MultiPoolPage: FunctionComponent = () => {\r\n  const mounted:any = useRef()\r\n\r\n  const params:any = useParams()\r\n  const contractAddress:string = params.contract_address\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const multiPoolState = useSelector((state:any) => state.multiPool)\r\n\r\n  useEffect(() => {\r\n    if (!mounted.current) {\r\n      // do componentDidMount logic\r\n      dispatch({ type: 'SET_MULTI_POOL', payload: { contractAddress } })\r\n      dispatch(loadMultiPool())\r\n\r\n      mounted.current = true;\r\n    } else {\r\n      // do componentDidUpdate logic\r\n      if (contractAddress && contractAddress !== multiPoolState.contractAddress) {\r\n        dispatch({ type: 'RESET_MULTI_POOL' })\r\n        dispatch({ type: 'SET_MULTI_POOL', payload: { contractAddress } })\r\n        dispatch(loadMultiPool())\r\n      }\r\n    }\r\n  })\r\n\r\n\r\n  if (multiPoolState.meta.success) {\r\n    return (\r\n      <div className={classes.container}>\r\n        <div className={classes.dashboardContainer}>\r\n          <PageHeader\r\n            title={multiPoolState.name}\r\n          />\r\n\r\n          <div className={classes.dashboard}>\r\n\r\n            <div className={classes.dashboardLeft}>\r\n              <div className={classes.threeGrid}>\r\n                <div className={classes.card}>\r\n                  <Metric\r\n                    className={classes.metric}\r\n                    label=\"Holder Count\"\r\n                    valueItems={[{\r\n                      value: multiPoolState.data.liquidityProviderCount,\r\n                    }]}\r\n                  />\r\n                </div>\r\n                <div className={classes.card}>\r\n                  <Metric\r\n                    className={classes.metric}\r\n                    label=\"Asset Value\"\r\n                    valueItems={[{\r\n                      value: genFormattedNumber(multiPoolState.data.assetValue, 2),\r\n                      unit: 'USD',\r\n                    }]}\r\n                  />\r\n                </div>\r\n                <div className={classes.card}>\r\n                  <Metric\r\n                    className={classes.metric}\r\n                    label=\"Liquidity\"\r\n                    valueItems={[{\r\n                      value: genFormattedNumber(multiPoolState.data.liquidity, 2),\r\n                      unit: 'USD',\r\n                    }]}\r\n                  />\r\n                </div>\r\n                <div className={classes.card}>\r\n                  <Metric\r\n                    className={classes.metric}\r\n                    label=\"24H Volume\"\r\n                    valueItems={[{\r\n                      value: genFormattedNumber(multiPoolState.data.volume, 2),\r\n                      unit: 'USD',\r\n                    }]}\r\n                  />\r\n                </div>\r\n                <div className={classes.card}>\r\n                  <Metric\r\n                    className={classes.metric}\r\n                    label=\"24H Fees Earned\"\r\n                    valueItems={[{\r\n                      value: genFormattedNumber(multiPoolState.data.feesEarned, 2),\r\n                      unit: 'USD',\r\n                    }]}\r\n                  />\r\n                </div>\r\n                <div className={classes.card}>\r\n                  <Metric\r\n                    className={classes.metric}\r\n                    label=\"24H Fees APY\"\r\n                    valueItems={[{\r\n                      value: genFormattedNumber(multiPoolState.data.feesApy * 100, 2),\r\n                      unit: '%',\r\n                    }]}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className={classes.dashboardRight}>\r\n              <div className={classes.card}>\r\n                <div className={classes.cardTitle}>Assets</div>\r\n                <Chart\r\n                  width={'100%'}\r\n                  height={'200px'}\r\n                  chartType=\"PieChart\"\r\n                  loader={<div>Loading Chart</div>}\r\n                  data={[\r\n                    ['Asset', 'Portion'],\r\n                    ...multiPoolState.assets.map((item:any) => ([ item.ticker, item.proportion ])),\r\n                  ]}\r\n                  options={{\r\n                    chartArea: {\r\n                      left: 0,\r\n                      top: 10,\r\n                      width: '100%',\r\n                      height: '90%',\r\n                    },\r\n                    legend: 'none',\r\n                    pieSliceText: 'label',\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div className={classes.wallet}>\r\n\r\n        </div>\r\n      </div>\r\n    )\r\n  } else {\r\n    return <Loader size='medium' />\r\n  }\r\n}\r\n\r\nexport default MultiPoolPage\r\n"]},"metadata":{},"sourceType":"module"}