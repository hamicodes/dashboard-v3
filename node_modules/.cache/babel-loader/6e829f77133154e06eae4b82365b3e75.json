{"ast":null,"code":"var _jsxFileName = \"/Users/nco/Documents/GitHub/dashboard/src/Components/Metric/Metric.tsx\";\nimport React from 'react';\nimport classes from './Metric.module.scss';\n\nconst Metric = props => {\n  const {\n    label,\n    valueItems,\n    progressPerc,\n    children\n  } = props;\n  let valueDoms;\n  let progressDom;\n\n  if (!children) {\n    valueDoms = valueItems.map((item, index) => {\n      if (item.prefix) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: `metric-${index}`,\n          className: classes.value,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: classes.prefix,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 13\n          }\n        }, item.prefix), /*#__PURE__*/React.createElement(\"span\", {\n          className: classes.value,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 13\n          }\n        }, item.value), /*#__PURE__*/React.createElement(\"span\", {\n          className: classes.suffix,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }\n        }, item.suffix));\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: `metric-${index}`,\n          className: classes.value,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 11\n          }\n        }, item.value, \" \", item.suffix);\n      }\n    });\n\n    if (progressPerc) {\n      progressDom = /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.progressContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.progressBar,\n        style: {\n          width: `${progressPerc * 100}%`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }\n      }));\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, label), children, valueDoms, progressDom);\n};\n\nexport default Metric;","map":{"version":3,"sources":["/Users/nco/Documents/GitHub/dashboard/src/Components/Metric/Metric.tsx"],"names":["React","classes","Metric","props","label","valueItems","progressPerc","children","valueDoms","progressDom","map","item","index","prefix","value","suffix","progressContainer","progressBar","width","container"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAGA,MAAMC,MAAM,GAAIC,KAAD,IAAe;AAC5B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,UAAT;AAAqBC,IAAAA,YAArB;AAAmCC,IAAAA;AAAnC,MAAgDJ,KAAtD;AAEA,MAAIK,SAAJ;AACA,MAAIC,WAAJ;;AACA,MAAI,CAACF,QAAL,EAAe;AACbC,IAAAA,SAAS,GAAGH,UAAU,CAACK,GAAX,CAAe,CAACC,IAAD,EAAWC,KAAX,KAA4B;AACrD,UAAID,IAAI,CAACE,MAAT,EAAiB;AACf,4BACE;AAAK,UAAA,GAAG,EAAG,UAASD,KAAM,EAA1B;AAA6B,UAAA,SAAS,EAAEX,OAAO,CAACa,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAM,UAAA,SAAS,EAAEb,OAAO,CAACY,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAmCF,IAAI,CAACE,MAAxC,CADF,eAEE;AAAM,UAAA,SAAS,EAAEZ,OAAO,CAACa,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAkCH,IAAI,CAACG,KAAvC,CAFF,eAGE;AAAM,UAAA,SAAS,EAAEb,OAAO,CAACc,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAmCJ,IAAI,CAACI,MAAxC,CAHF,CADF;AAOD,OARD,MAQO;AACL,4BACE;AAAK,UAAA,GAAG,EAAG,UAASH,KAAM,EAA1B;AAA6B,UAAA,SAAS,EAAEX,OAAO,CAACa,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACIH,IAAI,CAACG,KADT,OACmBH,IAAI,CAACI,MADxB,CADF;AAKD;AACF,KAhBW,CAAZ;;AAkBA,QAAIT,YAAJ,EAAkB;AAChBG,MAAAA,WAAW,gBACT;AAAK,QAAA,SAAS,EAAER,OAAO,CAACe,iBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACE,QAAA,SAAS,EAAEf,OAAO,CAACgB,WADrB;AAEE,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAG,GAAEZ,YAAY,GAAG,GAAI;AAA/B,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAQD;AACF;;AAED,sBACE;AAAK,IAAA,SAAS,EAAEL,OAAO,CAACkB,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAElB,OAAO,CAACG,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCA,KAAjC,CADF,EAEIG,QAFJ,EAGIC,SAHJ,EAIIC,WAJJ,CADF;AAQD,CA5CD;;AA8CA,eAAeP,MAAf","sourcesContent":["import React from 'react'\r\nimport classes from './Metric.module.scss'\r\n\r\n\r\nconst Metric = (props:any) => {\r\n  const { label, valueItems, progressPerc, children } = props\r\n\r\n  let valueDoms\r\n  let progressDom\r\n  if (!children) {\r\n    valueDoms = valueItems.map((item:any, index:Number) => {\r\n      if (item.prefix) {\r\n        return (\r\n          <div key={`metric-${index}`} className={classes.value}>\r\n            <span className={classes.prefix}>{ item.prefix }</span>\r\n            <span className={classes.value}>{ item.value }</span>\r\n            <span className={classes.suffix}>{ item.suffix }</span>\r\n          </div>\r\n        )\r\n      } else {\r\n        return (\r\n          <div key={`metric-${index}`} className={classes.value}>\r\n            { item.value } { item.suffix }\r\n          </div>\r\n        )\r\n      }\r\n    })\r\n\r\n    if (progressPerc) {\r\n      progressDom = (\r\n        <div className={classes.progressContainer}>\r\n          <div\r\n            className={classes.progressBar}\r\n            style={{ width: `${progressPerc * 100}%` }}\r\n          />\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes.label}>{ label }</div>\r\n      { children }\r\n      { valueDoms }\r\n      { progressDom }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Metric\r\n"]},"metadata":{},"sourceType":"module"}