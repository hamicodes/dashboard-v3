{"ast":null,"code":"/**\n * deep equal lite version from dequal\n * https://github.com/lukeed/dequal/blob/master/license\n */\nvar has = Object.prototype.hasOwnProperty;\nexport default function deepEqual(foo, bar) {\n  var ctor, len;\n  if (foo === bar) return true;\n\n  if (foo && bar && (ctor = foo.constructor) === bar.constructor) {\n    if (ctor === Date) return foo.getTime() === bar.getTime();\n    if (ctor === RegExp) return foo.toString() === bar.toString();\n\n    if (ctor === Array) {\n      if ((len = foo.length) === bar.length) {\n        while (len-- && deepEqual(foo[len], bar[len]));\n      }\n\n      return len === -1;\n    }\n\n    if (!ctor || typeof foo === 'object') {\n      len = 0;\n\n      for (ctor in foo) {\n        if (has.call(foo, ctor) && ++len && !has.call(bar, ctor)) return false;\n        if (!(ctor in bar) || !deepEqual(foo[ctor], bar[ctor])) return false;\n      }\n\n      return Object.keys(bar).length === len;\n    }\n  }\n\n  return foo !== foo && bar !== bar;\n}","map":{"version":3,"sources":["/Users/nco/Documents/GitHub/dashboard/node_modules/swr/esm/libs/deep-equal.js"],"names":["has","Object","prototype","hasOwnProperty","deepEqual","foo","bar","ctor","len","constructor","Date","getTime","RegExp","toString","Array","length","call","keys"],"mappings":"AAAA;AACA;AACA;AACA;AACA,IAAIA,GAAG,GAAGC,MAAM,CAACC,SAAP,CAAiBC,cAA3B;AACA,eAAe,SAASC,SAAT,CAAmBC,GAAnB,EAAwBC,GAAxB,EAA6B;AACxC,MAAIC,IAAJ,EAAUC,GAAV;AACA,MAAIH,GAAG,KAAKC,GAAZ,EACI,OAAO,IAAP;;AACJ,MAAID,GAAG,IAAIC,GAAP,IAAc,CAACC,IAAI,GAAGF,GAAG,CAACI,WAAZ,MAA6BH,GAAG,CAACG,WAAnD,EAAgE;AAC5D,QAAIF,IAAI,KAAKG,IAAb,EACI,OAAOL,GAAG,CAACM,OAAJ,OAAkBL,GAAG,CAACK,OAAJ,EAAzB;AACJ,QAAIJ,IAAI,KAAKK,MAAb,EACI,OAAOP,GAAG,CAACQ,QAAJ,OAAmBP,GAAG,CAACO,QAAJ,EAA1B;;AACJ,QAAIN,IAAI,KAAKO,KAAb,EAAoB;AAChB,UAAI,CAACN,GAAG,GAAGH,GAAG,CAACU,MAAX,MAAuBT,GAAG,CAACS,MAA/B,EAAuC;AACnC,eAAOP,GAAG,MAAMJ,SAAS,CAACC,GAAG,CAACG,GAAD,CAAJ,EAAWF,GAAG,CAACE,GAAD,CAAd,CAAzB,CACI;AACP;;AACD,aAAOA,GAAG,KAAK,CAAC,CAAhB;AACH;;AACD,QAAI,CAACD,IAAD,IAAS,OAAOF,GAAP,KAAe,QAA5B,EAAsC;AAClCG,MAAAA,GAAG,GAAG,CAAN;;AACA,WAAKD,IAAL,IAAaF,GAAb,EAAkB;AACd,YAAIL,GAAG,CAACgB,IAAJ,CAASX,GAAT,EAAcE,IAAd,KAAuB,EAAEC,GAAzB,IAAgC,CAACR,GAAG,CAACgB,IAAJ,CAASV,GAAT,EAAcC,IAAd,CAArC,EACI,OAAO,KAAP;AACJ,YAAI,EAAEA,IAAI,IAAID,GAAV,KAAkB,CAACF,SAAS,CAACC,GAAG,CAACE,IAAD,CAAJ,EAAYD,GAAG,CAACC,IAAD,CAAf,CAAhC,EACI,OAAO,KAAP;AACP;;AACD,aAAON,MAAM,CAACgB,IAAP,CAAYX,GAAZ,EAAiBS,MAAjB,KAA4BP,GAAnC;AACH;AACJ;;AACD,SAAOH,GAAG,KAAKA,GAAR,IAAeC,GAAG,KAAKA,GAA9B;AACH","sourcesContent":["/**\n * deep equal lite version from dequal\n * https://github.com/lukeed/dequal/blob/master/license\n */\nvar has = Object.prototype.hasOwnProperty;\nexport default function deepEqual(foo, bar) {\n    var ctor, len;\n    if (foo === bar)\n        return true;\n    if (foo && bar && (ctor = foo.constructor) === bar.constructor) {\n        if (ctor === Date)\n            return foo.getTime() === bar.getTime();\n        if (ctor === RegExp)\n            return foo.toString() === bar.toString();\n        if (ctor === Array) {\n            if ((len = foo.length) === bar.length) {\n                while (len-- && deepEqual(foo[len], bar[len]))\n                    ;\n            }\n            return len === -1;\n        }\n        if (!ctor || typeof foo === 'object') {\n            len = 0;\n            for (ctor in foo) {\n                if (has.call(foo, ctor) && ++len && !has.call(bar, ctor))\n                    return false;\n                if (!(ctor in bar) || !deepEqual(foo[ctor], bar[ctor]))\n                    return false;\n            }\n            return Object.keys(bar).length === len;\n        }\n    }\n    return foo !== foo && bar !== bar;\n}\n"]},"metadata":{},"sourceType":"module"}