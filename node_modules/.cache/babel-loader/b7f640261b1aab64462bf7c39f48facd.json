{"ast":null,"code":"var _jsxFileName = \"/Users/nco/Documents/GitHub/dashboard/src/App.tsx\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\nimport Modal from \"react-modal\";\nimport { Web3ReactProvider } from '@web3-react/core';\nimport { Web3Provider } from '@ethersproject/providers';\nimport { useEagerConnect } from './hooks/useEagerConnect';\nimport { useInactiveListener } from './hooks/useInactiveListener';\nimport ReactDOM from 'react-dom';\nimport { Store } from './Store';\nimport classes from \"./App.module.scss\";\n// Components\nimport Sidebar from './Components/Sidebar/Sidebar'; // import Dashboard from './Components/Dashboard'\n// import PoolView from './Components/PoolView'\n\nimport IndexPage from './pages/IndexPage';\nimport StaPage from './pages/StaPage';\nimport PoolPage from './pages/PoolPage';\nimport MultiPoolPage from './pages/MultiPoolPage';\nimport Wallet from './Components/Wallet/Wallet';\nimport Loader from './Components/Loader/Loader';\nimport { useWeb3React } from '@web3-react/core';\nModal.setAppElement('#root');\n\nconst getLibrary = provider => new Web3Provider(provider);\n\nconst EagerConnect = () => {\n  const triedEager = useEagerConnect();\n  useInactiveListener(!triedEager);\n  return null;\n};\n\nconst uniswapGraphClient = new ApolloClient({\n  cache: new InMemoryCache(),\n  uri: \"https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v2\"\n});\n\nconst renderLoading = () => {\n  ReactDOM.render( /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 19\n    }\n  }), document.getElementById(\"loading\"));\n}; // const Loader = () => {\n//     const { dispatch } = useContext(Context)\n//     useEffect(() => {\n//         renderLoading()\n//         ;(async () => {\n//             dispatch({ type: \"SET_ethPrice\", data: await fetchETHPrice() })\n//         })()\n//     }, [dispatch])\n//     return null\n// }\n// const StatsDataLoader = () => {\n//     const data = useApiResult(\"/stats\", {}).data\n//     const { dispatch } = useContext(Context)\n//     useEffect(() => { if (data) dispatch({ type: \"SET_statsData\", data }) }, [data, dispatch])\n//     return null\n// }\n// const ChartDataLoader = () => {\n//     const data = useApiResult(\"/chartdata\", {}).data as any\n//     const { dispatch } = useContext(Context)\n//     useEffect(() => {\n//         if (data) {\n//             if (data[\"volumes\"]) {\n//                 const allVolumes: { [timestamp: number]: number } = {}\n//                 Object.keys(data[\"volumes\"] || {}).forEach(pool => {\n//                     const poolVolumes = data[\"volumes\"][pool][\"all\"] || []\n//                     poolVolumes.forEach(([timestamp, value]: [number, number], i: number) => {\n//                         allVolumes[timestamp] = (allVolumes[timestamp] || 0) + value\n//                     })\n//                 })\n//                 data[\"volumes\"][\"all\"] = { all: Object.keys(allVolumes).map(timestamp => [timestamp, allVolumes[parseInt(timestamp)]]) }\n//             }\n//             dispatch({ type: \"SET_chartData\", data })\n//         }\n//     }, [data, dispatch])\n//     return null\n// }\n\n\nconst genPageDom = () => {\n  return;\n};\n\nconst App = () => {\n  const {\n    activate,\n    deactivate,\n    account,\n    active\n  } = useWeb3React();\n  return /*#__PURE__*/React.createElement(ApolloProvider, {\n    client: uniswapGraphClient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Web3ReactProvider, {\n    getLibrary: getLibrary,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Store, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(EagerConnect, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.app,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.sidebarContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Sidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: IndexPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/sta\",\n    render: props => /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.main,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(StaPage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.walletContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Wallet, {\n      isStaPage: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 23\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/pool/:contract_address\",\n    render: props => /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.main,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(PoolPage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.walletContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Wallet, {\n      isStaPage: false,\n      poolContractAddress: props.match.params.contract_address,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 23\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/multi_pool/:contract_address\",\n    render: props => /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.main,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(MultiPoolPage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.walletContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Wallet, {\n      isStaPage: false,\n      poolContractAddress: props.match.params.contract_address,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 23\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  })))))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/nco/Documents/GitHub/dashboard/src/App.tsx"],"names":["React","BrowserRouter","Router","Route","Switch","ApolloClient","ApolloProvider","InMemoryCache","Modal","Web3ReactProvider","Web3Provider","useEagerConnect","useInactiveListener","ReactDOM","Store","classes","Sidebar","IndexPage","StaPage","PoolPage","MultiPoolPage","Wallet","Loader","useWeb3React","setAppElement","getLibrary","provider","EagerConnect","triedEager","uniswapGraphClient","cache","uri","renderLoading","render","document","getElementById","genPageDom","App","activate","deactivate","account","active","app","sidebarContainer","props","main","walletContainer","match","params","contract_address"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\"\nimport Modal from \"react-modal\"\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { useEagerConnect } from './hooks/useEagerConnect'\nimport { useInactiveListener } from './hooks/useInactiveListener'\nimport { Pool } from './Constants/Pool'\nimport ReactDOM from 'react-dom'\nimport { Context, Store } from './Store'\nimport { fetchETHPrice } from './hooks/useGlobalState'\nimport { useApiResult } from './hooks/useApiResult'\nimport classes from \"./App.module.scss\"\nimport logo from \"./assets/images/pools/statera.png\"\n// Components\nimport Sidebar from './Components/Sidebar/Sidebar'\n// import Dashboard from './Components/Dashboard'\n// import PoolView from './Components/PoolView'\nimport IndexPage from './pages/IndexPage'\nimport StaPage from './pages/StaPage'\nimport PoolPage from './pages/PoolPage'\nimport MultiPoolPage from './pages/MultiPoolPage'\nimport Wallet from './Components/Wallet/Wallet'\nimport Loader from './Components/Loader/Loader'\nimport { useWeb3React, getWeb3ReactContext } from '@web3-react/core'\n\n\nModal.setAppElement('#root')\n\nconst getLibrary = (provider: any) => new Web3Provider(provider)\n\nconst EagerConnect = () => {\n  const triedEager = useEagerConnect()\n  useInactiveListener(!triedEager)\n  return null\n}\n\nconst uniswapGraphClient = new ApolloClient({\n  cache: new InMemoryCache(),\n  uri: \"https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v2\"\n})\n\nconst renderLoading = () => {\n  ReactDOM.render(<Loader />, document.getElementById(\"loading\"))\n}\n\n// const Loader = () => {\n//     const { dispatch } = useContext(Context)\n//     useEffect(() => {\n//         renderLoading()\n//         ;(async () => {\n//             dispatch({ type: \"SET_ethPrice\", data: await fetchETHPrice() })\n//         })()\n//     }, [dispatch])\n//     return null\n// }\n\n// const StatsDataLoader = () => {\n//     const data = useApiResult(\"/stats\", {}).data\n//     const { dispatch } = useContext(Context)\n//     useEffect(() => { if (data) dispatch({ type: \"SET_statsData\", data }) }, [data, dispatch])\n//     return null\n// }\n// const ChartDataLoader = () => {\n//     const data = useApiResult(\"/chartdata\", {}).data as any\n//     const { dispatch } = useContext(Context)\n//     useEffect(() => {\n//         if (data) {\n//             if (data[\"volumes\"]) {\n//                 const allVolumes: { [timestamp: number]: number } = {}\n//                 Object.keys(data[\"volumes\"] || {}).forEach(pool => {\n//                     const poolVolumes = data[\"volumes\"][pool][\"all\"] || []\n//                     poolVolumes.forEach(([timestamp, value]: [number, number], i: number) => {\n//                         allVolumes[timestamp] = (allVolumes[timestamp] || 0) + value\n//                     })\n//                 })\n//                 data[\"volumes\"][\"all\"] = { all: Object.keys(allVolumes).map(timestamp => [timestamp, allVolumes[parseInt(timestamp)]]) }\n//             }\n//             dispatch({ type: \"SET_chartData\", data })\n//         }\n//     }, [data, dispatch])\n//     return null\n// }\n\nconst genPageDom = () => {\n  return\n}\n\nconst App = () => {\n  const { activate, deactivate, account, active } = useWeb3React()\n\n  return (\n    <ApolloProvider client={uniswapGraphClient}>\n      <Web3ReactProvider getLibrary={getLibrary}>\n        <Store>\n          <EagerConnect />\n          <Router>\n            <div className={classes.app}>\n              <div className={classes.sidebarContainer}>\n                <Sidebar />\n              </div>\n              <Switch>\n                <Route exact path=\"/\" component={IndexPage} />\n\n                <Route path=\"/sta\" render={(props:any) => (\n                  <div className={classes.main}>\n                    <StaPage />\n                    <div className={classes.walletContainer}>\n                      <Wallet\n                        isStaPage={true}\n                      />\n                    </div>\n                  </div>\n                )} />\n\n                <Route path=\"/pool/:contract_address\" render={(props:any) => (\n                  <div className={classes.main}>\n                    <PoolPage />\n                    <div className={classes.walletContainer}>\n                      <Wallet\n                        isStaPage={false}\n                        poolContractAddress={props.match.params.contract_address}\n                      />\n                    </div>\n                  </div>\n                )} />\n\n                <Route path=\"/multi_pool/:contract_address\" render={(props:any) => (\n                  <div className={classes.main}>\n                    <MultiPoolPage />\n                    <div className={classes.walletContainer}>\n                      <Wallet\n                        isStaPage={false}\n                        poolContractAddress={props.match.params.contract_address}\n                      />\n                    </div>\n                  </div>\n                )} />\n              </Switch>\n            </div>\n          </Router>\n        </Store>\n      </Web3ReactProvider>\n    </ApolloProvider>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}