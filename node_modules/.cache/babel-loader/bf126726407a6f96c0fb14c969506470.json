{"ast":null,"code":"var _jsxFileName = \"/Users/nco/Documents/GitHub/dashboard/src/Components/Metric/Metric.tsx\";\nimport React from 'react';\nimport classes from './Metric.module.scss';\n\nconst Metric = props => {\n  const {\n    label,\n    valueItems,\n    progressPerc,\n    children\n  } = props;\n  let valueDoms;\n  let progressDom;\n\n  if (!children) {\n    valueDoms = valueItems.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: `metric-${index}`,\n        className: classes.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 9\n        }\n      }, item.value, \" \", item.unit);\n    });\n\n    if (progressPerc) {\n      progressDom = /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.progressContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.progressBar,\n        style: {\n          width: `${progressPerc * 100}%`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }\n      }));\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, label), children, valueDoms, progressDom);\n};\n\nexport default Metric;","map":{"version":3,"sources":["/Users/nco/Documents/GitHub/dashboard/src/Components/Metric/Metric.tsx"],"names":["React","classes","Metric","props","label","valueItems","progressPerc","children","valueDoms","progressDom","map","item","index","value","unit","progressContainer","progressBar","width","container"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAGA,MAAMC,MAAM,GAAIC,KAAD,IAAe;AAC5B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,UAAT;AAAqBC,IAAAA,YAArB;AAAmCC,IAAAA;AAAnC,MAAgDJ,KAAtD;AAEA,MAAIK,SAAJ;AACA,MAAIC,WAAJ;;AACA,MAAI,CAACF,QAAL,EAAe;AACbC,IAAAA,SAAS,GAAGH,UAAU,CAACK,GAAX,CAAe,CAACC,IAAD,EAAWC,KAAX,KAA4B;AACrD,0BACE;AAAK,QAAA,GAAG,EAAG,UAASA,KAAM,EAA1B;AAA6B,QAAA,SAAS,EAAEX,OAAO,CAACY,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACIF,IAAI,CAACE,KADT,OACmBF,IAAI,CAACG,IADxB,CADF;AAKD,KANW,CAAZ;;AAQA,QAAIR,YAAJ,EAAkB;AAChBG,MAAAA,WAAW,gBACT;AAAK,QAAA,SAAS,EAAER,OAAO,CAACc,iBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACE,QAAA,SAAS,EAAEd,OAAO,CAACe,WADrB;AAEE,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAG,GAAEX,YAAY,GAAG,GAAI;AAA/B,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAQD;AACF;;AAED,sBACE;AAAK,IAAA,SAAS,EAAEL,OAAO,CAACiB,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAEjB,OAAO,CAACG,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCA,KAAjC,CADF,EAEIG,QAFJ,EAGIC,SAHJ,EAIIC,WAJJ,CADF;AAQD,CAlCD;;AAoCA,eAAeP,MAAf","sourcesContent":["import React from 'react'\r\nimport classes from './Metric.module.scss'\r\n\r\n\r\nconst Metric = (props:any) => {\r\n  const { label, valueItems, progressPerc, children } = props\r\n\r\n  let valueDoms\r\n  let progressDom\r\n  if (!children) {\r\n    valueDoms = valueItems.map((item:any, index:Number) => {\r\n      return (\r\n        <div key={`metric-${index}`} className={classes.value}>\r\n          { item.value } { item.unit }\r\n        </div>\r\n      )\r\n    })\r\n\r\n    if (progressPerc) {\r\n      progressDom = (\r\n        <div className={classes.progressContainer}>\r\n          <div\r\n            className={classes.progressBar}\r\n            style={{ width: `${progressPerc * 100}%` }}\r\n          />\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes.label}>{ label }</div>\r\n      { children }\r\n      { valueDoms }\r\n      { progressDom }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Metric\r\n"]},"metadata":{},"sourceType":"module"}