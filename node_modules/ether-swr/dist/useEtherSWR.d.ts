import { responseInterface } from 'swr';
import { EthSWRConfigInterface } from './types';
export { cache } from 'swr';
export declare type ethKeyInterface = [string, any?, any?, any?, any?];
export declare type ethKeysInterface = string[][];
declare function useEtherSWR<Data = any, Error = any>(key: ethKeyInterface | ethKeysInterface): responseInterface<Data, Error>;
declare function useEtherSWR<Data = any, Error = any>(key: ethKeyInterface | ethKeysInterface, config?: EthSWRConfigInterface<Data, Error>): responseInterface<Data, Error>;
declare function useEtherSWR<Data = any, Error = any>(key: ethKeyInterface | ethKeysInterface, fetcher?: any, //fetcherFn<Data>,
config?: EthSWRConfigInterface<Data, Error>): responseInterface<Data, Error>;
declare const EthSWRConfig: import("react").Provider<EthSWRConfigInterface<any, any>>;
export { EthSWRConfig };
export default useEtherSWR;
